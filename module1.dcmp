export memory memory(initial: 1, max: 0);

data d_0100000000000000(offset: 0) = "0100000000000000";
data d_TestContract(offset: 16) = "TestContract";
data d_c(offset: 28) = "Foo";

import function new_struct():externref;

import function new_struct_value(a:externref, b:externref, c:int):externref;

import function string(a:int, b:int):externref;

import function new_address_loaction(a:externref, b:externref):externref;

export function recursive_fib(a:int):int {
  if (a < 2) { return a }
  return recursive_fib(a - 1) + recursive_fib(a - 2);
}

export function imperative_fib(a:int):int {
  var b:int = 1;
  var c:int = 1;
  var d:int = a;
  var e:int = 2;
  loop L_b {
    if (e >= a) goto B_a;
    d = b + c;
    b = c;
    c = d;
    e = e + 1;
    continue L_b;
  }
  label B_a:
  return d;
}

export function create_struct_simple():externref {
  return new_struct()
}

export function create_struct() {
  var a:int = 0;
  loop L_b {
    if (a >= 5) goto B_a;
    new_struct();
    a = a + 1;
    continue L_b;
  }
  label B_a:
}

export function empty_function() {
}

export function create_composite_value():externref {
  return 
    new_struct_value(new_address_loaction(string(0, 16), string(16, 12)),
                     string(28, 3),
                     1)
}

export function benchmark_composite_value() {
  var a:int = 0;
  loop L_b {
    if (a >= 5) goto B_a;
    create_composite_value();
    a = a + 1;
    continue L_b;
  }
  label B_a:
}

