memory M_a(initial: 1, max: 0);

import function new_struct():externref;

export function recursive_fib(a:int):int {
  if (a < 2) { return a }
  return recursive_fib(a - 1) + recursive_fib(a - 2);
}

export function imperative_fib(a:int):int {
  var b:int = 1;
  var c:int = 1;
  var d:int = a;
  var e:int = 2;
  loop L_b {
    if (e >= a) goto B_a;
    d = b + c;
    b = c;
    c = d;
    e = e + 1;
    continue L_b;
  }
  label B_a:
  return d;
}

export function create_struct_simple():externref {
  return new_struct()
}

export function create_struct() {
  var a:int = 0;
  loop L_b {
    if (a >= 7) goto B_a;
    new_struct();
    a = a + 1;
    continue L_b;
  }
  label B_a:
}

export function empty_function() {
}

